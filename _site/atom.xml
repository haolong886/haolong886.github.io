<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Cook girl</title>
 <link href="http://haolong886.github.io/atom.xml" rel="self"/>
 <link href="http://haolong886.github.io"/>
 <updated>2015-01-16T23:27:28+08:00</updated>
 <id>http://haolong886.github.io</id>
 <author>
   <name>wayne</name>
 </author>

 
 <entry>
   <title>shell小问题</title>
   <link href="http://haolong886.github.io/2015/01/16/shell_study.html"/>
   <updated>2015-01-16T00:00:00+08:00</updated>
   <id>http://haolong886.github.io/2015/01/16/shell_study</id>
   <content type="html">&lt;p&gt;在工作中遇到了两个问题，一个是关于expect，还有一个是read的问题。这两个问题都是在做一个关于密码复杂度需求过程中发现的，现在分别记下，以供日后参考。&lt;/p&gt;

&lt;h3&gt;I. expect问题&lt;/h3&gt;

&lt;p&gt;expect中有send命令，我们通过manual expect可以了解到，其实expect可以看作是类似shell的执行环境，里面带有自己的命令，send就是其中一个很常用的命令。需求中要求密码是支持键盘中所有字符的，并且可以以任意字符开头。密码需要用expect来验证，测试的过程中就发现一个以中杠“-”开头的密码会造成expect报错，错误如下：&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;expect1.1&gt; send &quot;-xxx&quot;&lt;br/&gt;
bad flag &quot;-xxx&quot;: must be -i, -h, -s, -null, -0, -raw, -break, or --&lt;br/&gt;
while executing&lt;br/&gt;
&quot;send &quot;-xxx&quot;&quot;&lt;br/&gt;
expect1.2&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;可以看到，send把带中杠的字符串当作是传递参数，但其又无“xxx”的参数，最终报错。
通过查看expect的手册可以看到下图所示的表述：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/media/files/20150116shell/sendmanual.png&quot;&gt;&lt;img src=&quot;/media/files/20150116shell/sendmanual.png&quot; alt=&quot;sendmanual&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;这段话很明白的指出了send默认的行为是会把以中杠“-”开头的字符串当作flag进行处理。而同时提供了“--”参数来强制使之后的参数都作为普通字符串处理。
由此，当我们在用expect的send密码等可能以中杠“-”开头的字符串时，最好都带上“--”参数，以避免传入带中杠的字符串而使脚本异常退出。&lt;/p&gt;

&lt;h3&gt;II. read问题&lt;/h3&gt;

&lt;p&gt;read有个默认行为是当用户输入的字符串以“\”结尾时，会认为是用户重启一行输入而继续读入用户的输入。这带来的一个问题是当输入的密码以“\”结尾时，read会出现阻塞的现象，而实际上它在还在等待用户输入，直到遇到以换行符结尾。要关掉这种默认行为可以加“-r”参数，打开这个开关时，read会把结尾的“\”当作普通字符读入，这样就不会出现脚本卡死的现象。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>markdown学习笔记</title>
   <link href="http://haolong886.github.io/2014/11/19/markdown_study.html"/>
   <updated>2014-11-19T00:00:00+08:00</updated>
   <id>http://haolong886.github.io/2014/11/19/markdown_study</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/media/files/markdown.png&quot; alt=&quot;markdown&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;&gt; 背景&lt;/h2&gt;

&lt;p&gt;学习markdown完全是因为本博客，这周终于启动了github blog的计划，目前看来还真是简单又好用。这里还要先感谢github的waynezhang大神，博客的样式是从他的repo中clone的，非常不错，该有的都有了。
言归正传，下面说说markdown这玩意儿，本博客是由jekyll+markdown+github生成的。markdown的语法可以说是极其简单，如果有哪个教程说三分钟入门markdown那绝对不是在吹牛。总结下今天学会的markdown基础标记。&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;&gt; markdown&lt;/h2&gt;

&lt;p&gt;记得第一次用work写论文时没有设定好文章的大纲格式，所有的标题、章节都是单独设置字体、字号等等，以至于文章无法查看大纲，更无法自动生成目录。后来又花了好大的力气把文章的格式重新设置一遍，浪费了很多时间。由此可见一篇文章的结构是多么重要，那就先从大纲类的标记说起，分为标题，序列。&lt;/p&gt;

&lt;h3&gt;I. 标题&lt;/h3&gt;

&lt;p&gt;标题用&#39;#&#39;来标记，如：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;# 一级标题
## 二级标题
### 三级标题
#### 四级标题
##### 五级标题
###### 六级标题
大标题
＝
小标题
-
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;得到的效果如下：&lt;/p&gt;

&lt;blockquote&gt;&lt;h1&gt;一级标题&lt;/h1&gt;

&lt;h2&gt;二级标题&lt;/h2&gt;

&lt;h3&gt;三级标题&lt;/h3&gt;

&lt;h4&gt;四级标题&lt;/h4&gt;

&lt;h5&gt;五级标题&lt;/h5&gt;

&lt;h6&gt;六级标题&lt;/h6&gt;

&lt;h1&gt;大标题&lt;/h1&gt;

&lt;h2&gt;小标题&lt;/h2&gt;&lt;/blockquote&gt;

&lt;h3&gt;II. 序列&lt;/h3&gt;

&lt;p&gt;在第一行加上 “&gt;”和一个空格，表示代码引用，还可以嵌套。如下：&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;&gt; you are a superman&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;效果如下：&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;you are a superman&lt;/p&gt;&lt;/blockquote&gt;

&lt;h3&gt;III. 换行&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;单一段落&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;用一个空白行&lt;/li&gt;
&lt;li&gt;连续两个空格 会变成一个&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;连续3个符号，然后是空行，表示 hr横线&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;换行是很重要的，如果要产生一个&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;必须在要换行的地方插入两个空格。&lt;/p&gt;

&lt;h3&gt;IV. 转义&lt;/h3&gt;

&lt;p&gt;转义分为两种情况，一种是转义markdown自身的标记，另一种是转义Html的标记。&lt;/p&gt;

&lt;h4&gt;1. 转义markdown标记&lt;/h4&gt;

&lt;p&gt;Markdown利用反斜杠\来转义Markdown的语法字符，可转义如下字符：&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;\   反斜线&lt;br/&gt;
`   反引号&lt;br/&gt;
*   星号&lt;br/&gt;
_   底线&lt;br/&gt;
{}  花括号&lt;br/&gt;
[]  方括号&lt;br/&gt;
()  括弧&lt;br/&gt;
#   井字号&lt;br/&gt;
+   加号&lt;br/&gt;
-   减号&lt;br/&gt;
.   英文句点&lt;br/&gt;
!   惊叹号&lt;/p&gt;&lt;/blockquote&gt;

&lt;h4&gt;2. 转义html标记&lt;/h4&gt;

&lt;p&gt;markdown支持在文本中直接加入html标签，但是当我们想要在文本中显示html标签时就需要对其进行转义，比如要想显示&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;，如果直接在markdown中输入该标签，会产生挑选的效果，此时可用反引号“`”将html标签包围，如`&lt;code&gt;&amp;lt;br&amp;gt;&lt;/code&gt;`。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>日本印象</title>
   <link href="http://haolong886.github.io/2014/11/16/japan.html"/>
   <updated>2014-11-16T00:00:00+08:00</updated>
   <id>http://haolong886.github.io/2014/11/16/japan</id>
   <content type="html">&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;初见

&lt;blockquote&gt;&lt;p&gt;日本美丽的街道，在现今国内的大城市中，已经很难见到这样多的电线杆。但是在日本这个国家，老旧的电线杆与整洁的道路搭配得如此美妙。&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;a href=&quot;/media/files/IMG_6806.jpg&quot;&gt;&lt;img src=&quot;/media/files/IMG_6806.jpg&quot; alt=&quot;街道&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;印象

&lt;blockquote&gt;&lt;p&gt;拉面是日本的大众饮食，大大小小的拉面馆错落在各式小巷，暧暧的色调，干净的大厨。&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;a href=&quot;/media/files/IMG_6809.jpg&quot;&gt;&lt;img src=&quot;/media/files/IMG_6809.jpg&quot; alt=&quot;拉面&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 
</feed>
